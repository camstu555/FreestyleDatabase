@page "/Database"

@inject QueryParameterService Query
@inject WrestlingDataService Http
@using Radzen.Blazor
@using rankings2.Models


@if (wrestlingData == null)
{
    <p>Loading...Hang tight we are loading thousands of matches for you!</p>
}
else{ 
<RadzenTextBox Placeholder="Wrestler Name" @bind-Value="@text" Change="OnChange" />


@*<RadzenTextBox @bind-Value="@country" Change="OnChange" />
<RadzenTextBox @bind-Value="@emoji" Change="OnChange" />*@

<br />
<br />



<RadzenGrid AllowSorting="true" AllowPaging="true" AllowFiltering="false" Data="@wrestlingData" TItem="WrestlingDataModel" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" Responsive="false" PageSize="30" PageNumbersCount="25">
    <Columns>
        <RadzenGridColumn TItem="WrestlingDataModel" Context="data" Property="WeightClass" Title="Wt." Type="string" TextAlign="Radzen.TextAlign.Center" Width="50px">
            <Template>
                @data.WeightClass
            </Template>
        </RadzenGridColumn>
        <RadzenGridColumn TItem="WrestlingDataModel" Context="data" Property="Country1" Title="Co." Type="string" Width="40px" TextAlign="Radzen.TextAlign.Center">
            <Template>
                <span title=@data.FullCountryName1>@data.Country1Emoji</span>
            </Template>
        </RadzenGridColumn>
        <RadzenGridColumn TItem="WrestlingDataModel" Context="data" Property="WrestlerName1" Title="Name" Type="string" TextAlign="Radzen.TextAlign.Center">
            <Template>
                <span title=@data.FixedWrestlerName1><strong>@data.FixedWrestlerName1</strong></span>

            </Template>
        </RadzenGridColumn>
        <RadzenGridColumn TItem="WrestlingDataModel" Context="data" Property="Result" Title="Result" Type="string" Filterable="false" Sortable="false" TextAlign="Radzen.TextAlign.Center" Width="60px">
            <Template>
                @data.Result
            </Template>
        </RadzenGridColumn>
        <RadzenGridColumn TItem="WrestlingDataModel" Context="data" Property="Score" Title="Score" Type="string" Filterable="false" Sortable="false" TextAlign="Radzen.TextAlign.Center" Width="60px">
            <Template>
                @data.Score
            </Template>
        </RadzenGridColumn>
        <RadzenGridColumn TItem="WrestlingDataModel" Context="data" Property="WrestlerName2" Title="Name" Type="string" TextAlign="Radzen.TextAlign.Center">
            <Template>
                <span title=@data.FixedWrestlerName2>@data.FixedWrestlerName2</span>
            </Template>
        </RadzenGridColumn>
        <RadzenGridColumn TItem="WrestlingDataModel" Context="data" Property="Country2" Title="Co." Type="string" TextAlign="Radzen.TextAlign.Center" Width="40px">
            <Template>
                <span title=@data.FullCountryName2>@data.Country2Emoji</span>
            </Template>
        </RadzenGridColumn>
        <RadzenGridColumn TItem="WrestlingDataModel" Context="data" Property="Round" Title="Round" Type="string" Sortable="false" TextAlign="Radzen.TextAlign.Center" Width="100px">
            <Template>
                @data.Round
            </Template>
        </RadzenGridColumn>
        <RadzenGridColumn TItem="WrestlingDataModel" Context="data" Property="Date" Title="Date" Type="DateTime" TextAlign="Radzen.TextAlign.Center" Width="90px">
            <Template>
                @data.Date
            </Template>
        </RadzenGridColumn>
        <RadzenGridColumn TItem="WrestlingDataModel" Context="data" Property="Venue" Title="Event" Type="string" TextAlign="Radzen.TextAlign.Center" Width="200px">
            <Template>
                <span title=@data.Venue>@data.Venue</span>
            </Template>
        </RadzenGridColumn>
        <RadzenGridColumn TItem="WrestlingDataModel" Context="data" Property="Venue" Title="City" Type="string" TextAlign="Radzen.TextAlign.Center" Width="180px">
            <Template>
                <span title=@data.Location>@data.Location</span>
            </Template>
        </RadzenGridColumn>
        <RadzenGridColumn TItem="WrestlingDataModel" Context="data" Property="Video" Title="Video" Type="string" TextAlign="Radzen.TextAlign.Center" Filterable="false" Sortable="false" Width="65px">
            <Template Context="data">
                @if (data.Video == "")
                {

                }
                else
                {
                    <a href="@data.Video" target="_blank">
                        <span class="oi oi-media-play"></span>
                    </a>

                }
            </Template>
        </RadzenGridColumn>
    </Columns>
</RadzenGrid>
}
<br />
<br />
<br />


@code {
    public string text;
    public string country;
    public string emoji;
    public async Task OnChange()
    {
        wrestlingData = await Http.SearchWrestlerDataAsync(text, country, emoji);
        this.StateHasChanged();
    }

    private List<WrestlingDataModel> wrestlingData;


    protected override async Task OnInitializedAsync()
    {
        text = Query["name"];
        if (string.IsNullOrEmpty(text))
        {
            wrestlingData = await Http.GetWrestlerDataAsync();
        }
        else
        {
            wrestlingData = await Http.SearchWrestlerDataAsync(text, country, emoji);
        }
    }


}
