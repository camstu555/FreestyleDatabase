@page "/Database"
@inject WrestlingDataService Http
@using Radzen.Blazor
@using rankings2.Models

<h1>Freestyle Wrestling Results</h1>

<RadzenTextBox @bind-Value="@text" Change="OnChange" />
<RadzenTextBox @bind-Value="@country" Change="OnChange" />
<RadzenTextBox @bind-Value="@emoji" Change="OnChange" />



<h1>@text</h1>

@if (wrestlingData == null)
{
    <p>Loading...</p>
}


<RadzenGrid AllowSorting="true" AllowPaging="true" AllowFiltering="true" Data="@wrestlingData" TItem="WrestlingDataModel" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" Responsive="false" PageSize="20" PageNumbersCount="20">
    <Columns>
        <RadzenGridColumn TItem="WrestlingDataModel" Context="data" Property="WeightClass" Title="Weight Class" Type="string" TextAlign="Radzen.TextAlign.Center">
            <Template>
                @data.WeightClass
            </Template>
        </RadzenGridColumn>
        <RadzenGridColumn TItem="WrestlingDataModel" Context="data" Property="Country1" Title="Country" Type="string" Width="100px" TextAlign="Radzen.TextAlign.Center">
            <Template>
                <span title=@data.FullCountryName1>@data.Country1Emoji</span>
            </Template>
        </RadzenGridColumn>
        <RadzenGridColumn TItem="WrestlingDataModel" Context="data" Property="WrestlerName1" Title="Name" Type="string" TextAlign="Radzen.TextAlign.Center">
            <Template>
               <span title=@data.WrestlerName1>@data.WrestlerName1</span>

            </Template>
        </RadzenGridColumn>
        <RadzenGridColumn TItem="WrestlingDataModel" Context="data" Property="Score" Title="Score" Type="string" Filterable="false" Sortable="false" TextAlign="Radzen.TextAlign.Center" Width="75px">
            <Template>
                @data.Score
            </Template>
        </RadzenGridColumn>
        <RadzenGridColumn TItem="WrestlingDataModel" Context="data" Property="WrestlerName2" Title="Name" Type="string" TextAlign="Radzen.TextAlign.Center">
            <Template>
                <span title=@data.WrestlerName2>@data.WrestlerName2</span>
            </Template>
        </RadzenGridColumn>
        <RadzenGridColumn TItem="WrestlingDataModel" Context="data" Property="Country2" Title="Country" Type="string" TextAlign="Radzen.TextAlign.Center" Width="75px">
            <Template>
                <span title=@data.FullCountryName2>@data.Country2Emoji</span>
            </Template>
        </RadzenGridColumn>
        <RadzenGridColumn TItem="WrestlingDataModel" Context="data" Property="Round" Title="Round" Type="string" Sortable="false" TextAlign="Radzen.TextAlign.Center">
            <Template>
                @data.Round
            </Template>
        </RadzenGridColumn>
        <RadzenGridColumn TItem="WrestlingDataModel" Context="data" Property="Date" Title="Date" Type="DateTime" TextAlign="Radzen.TextAlign.Center">
            <Template>
                @data.Date
            </Template>
        </RadzenGridColumn>
        <RadzenGridColumn TItem="WrestlingDataModel" Context="data" Property="Venue" Title="Event" Type="string" TextAlign="Radzen.TextAlign.Center">
            <Template>
                @data.Venue
            </Template>
        </RadzenGridColumn>
        <RadzenGridColumn TItem="WrestlingDataModel" Context="data" Property="Video" Title="Video" Type="string" TextAlign="Radzen.TextAlign.Center" Filterable="false" Sortable="false" Width="75px">
            <Template Context="data">
                @if (data.Video == "")
                {

                }
                else
                {
                    <a href="@data.Video" target="_blank">
                        <span class="oi oi-media-play"></span>
                    </a>

                }
            </Template>
        </RadzenGridColumn>
    </Columns>
</RadzenGrid>

<h1>Total Matches: 1727</h1>


@code {
    public string text;
    public string country;
    public string emoji;
    public async Task OnChange()
    {
        wrestlingData = await Http.SearchWrestlerDataAsync(text, country, emoji);
        this.StateHasChanged();
    }

    private List<WrestlingDataModel> wrestlingData;

    protected override async Task OnInitializedAsync()
    {
        wrestlingData = await Http.GetWrestlerDataAsync();
    }


}
